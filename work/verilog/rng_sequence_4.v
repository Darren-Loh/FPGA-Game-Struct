/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module rng_sequence_4 (
    input clk,
    input rst,
    input next,
    input rand_sel,
    output reg [15:0] out
  );
  
  
  
  wire [32-1:0] M_rnd_gen_num;
  reg [1-1:0] M_rnd_gen_next;
  reg [32-1:0] M_rnd_gen_seed;
  pn_gen_13 rnd_gen (
    .clk(clk),
    .rst(rst),
    .next(M_rnd_gen_next),
    .seed(M_rnd_gen_seed),
    .num(M_rnd_gen_num)
  );
  
  wire [16-1:0] M_duplicate_double;
  wire [8-1:0] M_duplicate_even;
  wire [8-1:0] M_duplicate_odd;
  reg [16-1:0] M_duplicate_value;
  sig_selector_14 duplicate (
    .value(M_duplicate_value),
    .double(M_duplicate_double),
    .even(M_duplicate_even),
    .odd(M_duplicate_odd)
  );
  
  always @* begin
    M_rnd_gen_seed = 32'hdaeeaade;
    M_rnd_gen_next = next;
    M_duplicate_value = 1'h0;
    if (rand_sel) begin
      out = M_rnd_gen_num[0+15-:16];
    end else begin
      M_duplicate_value = M_rnd_gen_num[0+7-:8];
      out = M_duplicate_double;
    end
  end
endmodule
